// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SenaTur.Senai.WebApi.Contexts;

namespace SenaTur.Senai.WebApi.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200310140337_SenaTur_Senai_Manha")]
    partial class SenaTur_Senai_Manha
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SenaTur.Senai.WebApi.Domains.Pacotes", b =>
                {
                    b.Property<int>("IdPacote")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("Ativo")
                        .HasColumnType("Bit");

                    b.Property<DateTime>("DataIda")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("DataVolta")
                        .HasColumnType("DATE");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCidade")
                        .IsRequired()
                        .HasColumnName("NomeCidade")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("NomePacote")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<decimal>("Valor")
                        .HasColumnName("Preco")
                        .HasColumnType("DECIMAL (18,2)");

                    b.HasKey("IdPacote");

                    b.ToTable("Pacotes");

                    b.HasData(
                        new { IdPacote = 1, Ativo = true, DataIda = new DateTime(2020, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), DataVolta = new DateTime(2020, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), Descricao = " O que não falta em Salvador são atrações. Prova disso são as praias, os museus e as construções seculares que dão um charme mais que especial à região. A cidade, sinônimo de alegria, também é conhecida pela efervescência cultural que a credenciou como um dos destinos mais procurados por turistas brasileiros e estrangeiros. O Pelourinho e o Elevador são alguns dos principais pontos de visitação.", NomeCidade = "Salvador", NomePacote = "Salvador - 5 Dias/4 Diárias", Valor = 85400m },
                        new { IdPacote = 2, Ativo = true, DataIda = new DateTime(2020, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), DataVolta = new DateTime(2020, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), Descricao = "O Litoral Norte da Bahia conta com inúmeras praias emolduradas por coqueiros, além de piscinas naturais de águas mornas que são protegidas por recifes e habitadas por peixes coloridos. Banhos de mar em águas calmas ou agitadas, mergulho com snorkel, caminhada pela orla e calçadões, passeios de bicicleta, pontos turísticos históricos, interação com animais e até baladas estão entre as atrações da região. Destacam-se as praias de Guarajuba, Imbassaí, Praia do Forte e Costa do Sauipe.", NomeCidade = "Salvador", NomePacote = "Resorts na Bahia - Litoral Norte - 5 dias/4 diárias", Valor = 182600m },
                        new { IdPacote = 3, Ativo = true, DataIda = new DateTime(2020, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), DataVolta = new DateTime(2020, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Descricao = "Localizado no estado de Mato Grosso do Sul e ao sul do Pantanal, Bonito possui centenas de cachoeiras, rios e lagos de águas cristalinas, além de cavernas inundadas, paredões rochosos e uma infinidade de peixes. Os aventureiros costumam render-se facilmente a esse destino regado por trilhas ecológicas, passeios de bote e descidas de rapel pelas inúmeras quedas d'água da região", NomeCidade = "Bonito", NomePacote = "Bonito via Campo Grande - 1 Passeio - 5 dias/4 diárias", Valor = 100400m }
                    );
                });

            modelBuilder.Entity("SenaTur.Senai.WebApi.Domains.TiposUsuario", b =>
                {
                    b.Property<int>("IdTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("IdTipoUsuario");

                    b.HasIndex("Titulo")
                        .IsUnique();

                    b.ToTable("TiposUsuario");

                    b.HasData(
                        new { IdTipoUsuario = 1, Titulo = "Administrador" },
                        new { IdTipoUsuario = 2, Titulo = "Cliente" }
                    );
                });

            modelBuilder.Entity("SenaTur.Senai.WebApi.Domains.Usuarios", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<int>("IdTipoUsuario");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)")
                        .HasMaxLength(30);

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdTipoUsuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new { IdUsuario = 1, Email = "admin@admim.com", IdTipoUsuario = 1, Senha = "admin" },
                        new { IdUsuario = 2, Email = "cliente@cliente.com", IdTipoUsuario = 2, Senha = "cliente" }
                    );
                });

            modelBuilder.Entity("SenaTur.Senai.WebApi.Domains.Usuarios", b =>
                {
                    b.HasOne("SenaTur.Senai.WebApi.Domains.TiposUsuario", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("IdTipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
